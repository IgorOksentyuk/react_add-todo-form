{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","todosWithUsers","getTodoId","Math","max","App","useState","setTodos","hasTitleError","setHasTitleError","todoTitle","setTodoTitle","setUserId","hasUserIdError","setHasUserIdError","action","method","placeholder","type","value","onChange","event","target","disabled","onClick","preventDefault","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"4OAMaA,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,mBAAGC,UAAU,WAAWC,KAAI,wBAAYF,QAAZ,IAAYA,OAAZ,EAAYA,EAAMG,OAA9C,gBACGH,QADH,IACGA,OADH,EACGA,EAAMI,QCCEC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,0BAEE,UAASA,EAAKC,GACdN,UACEO,IAAW,WAAY,CAAE,sBAAuBF,EAAKG,YAJzD,UAOE,oBAAIR,UAAU,kBAAd,SACGK,EAAKI,QAGR,cAAC,EAAD,CAAUV,KAAMM,EAAKN,SAVhBM,EAAKC,KCJHI,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASX,UAAU,WAAnB,SAEIW,EAAMC,KAAI,SAAAP,GAAI,OACZ,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKC,UCZb,GACb,CACEA,GAAI,EACJH,KAAM,gBACNU,SAAU,OACVX,MAAO,qBAET,CACEI,GAAI,EACJH,KAAM,eACNU,SAAU,YACVX,MAAO,qBAET,CACEI,GAAI,EACJH,KAAM,mBACNU,SAAU,WACVX,MAAO,sBAET,CACEI,GAAI,EACJH,KAAM,mBACNU,SAAU,WACVX,MAAO,6BAET,CACEI,GAAI,EACJH,KAAM,mBACNU,SAAU,SACVX,MAAO,4BAET,CACEI,GAAI,EACJH,KAAM,uBACNU,SAAU,mBACVX,MAAO,2BAET,CACEI,GAAI,EACJH,KAAM,kBACNU,SAAU,eACVX,MAAO,0BAET,CACEI,GAAI,EACJH,KAAM,2BACNU,SAAU,gBACVX,MAAO,wBAET,CACEI,GAAI,EACJH,KAAM,kBACNU,SAAU,WACVX,MAAO,2BAET,CACEI,GAAI,GACJH,KAAM,qBACNU,SAAU,iBACVX,MAAO,2BCpDLY,EAAc,SAACC,GACnB,OAAOC,EAAgBC,MAAK,SAAAlB,GAAI,OAAIA,EAAKO,KAAOS,MAC3C,MAGDG,ECZS,CACb,CACEZ,GAAI,EACJG,MAAO,qBACPD,WAAW,EACXO,OAAQ,GAEV,CACET,GAAI,GACJG,MAAO,kBACPD,WAAW,EACXO,OAAQ,GAEV,CACET,GAAI,EACJG,MAAO,qCACPD,WAAW,EACXO,OAAQ,IDL2BH,KAAI,SAAAP,GAAI,kCAC1CA,GAD0C,IAE7CN,KAAMe,EAAYT,EAAKU,aAGnBI,EAAY,SAACR,GACjB,OAAOS,KAAKC,IAAL,MAAAD,KAAI,YAAQT,EAAMC,KAAI,SAAAP,GAAI,OAAIA,EAAKC,QAAO,GAGtCgB,EAAgB,WAC3B,MAA0BC,mBAASL,GAAnC,mBAAOP,EAAP,KAAca,EAAd,KACA,EAA0CD,oBAAS,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAA4BL,mBAAS,GAArC,mBAAOR,EAAP,KAAec,EAAf,KACA,EAA4CN,oBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KAkCA,OACE,sBAAK/B,UAAU,MAAf,UACE,+CAEA,uBAAMgC,OAAO,aAAaC,OAAO,OAAjC,UACE,sBAAKjC,UAAU,QAAf,UACE,uBACEkC,YAAY,cACZC,KAAK,OACL,UAAQ,aACRC,MAAOT,EACPU,SAAU,SAACC,GACTV,EAAaU,EAAMC,OAAOH,OAC1BV,GAAiB,MAGpBD,GACI,sBAAMzB,UAAU,QAAhB,qCAGP,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRoC,MAAOrB,EACPsB,SAAU,SAAAC,GACRT,GAAWS,EAAMC,OAAOH,OACxBL,GAAkB,IALtB,UAQE,wBAAQK,MAAM,IAAII,UAAQ,EAA1B,2BAEExB,EAAgBJ,KAAI,SAAAb,GAAI,OACtB,wBAAsBqC,MAAOrC,EAAKO,GAAlC,SAAuCP,EAAKI,MAA/BJ,EAAKO,UAIvBwB,GACI,sBAAM9B,UAAU,QAAhB,qCAGP,wBACEmC,KAAK,SACL,UAAQ,eACRM,QA3EM,SAACH,GACbA,EAAMI,iBAEN,IAAMC,EAAgB,CACpBrC,GAAIa,EAAUR,GACdF,MAAOkB,EACPnB,WAAW,EACXO,SACAhB,KAAMe,EAAYC,IAGfY,GACHD,GAAiB,GAGdX,GACHgB,GAAkB,GAGfJ,GAAcZ,GAIfY,GAAaZ,IACfW,GAAiB,GACjBK,GAAkB,GAClBP,GAAS,SAAAoB,GAAY,4BAAQA,GAAR,CAAsBD,OAC3Cf,EAAa,IACbC,EAAU,KA4CR,oBASF,cAAC,EAAD,CAAUlB,MAAOA,QE1GvBkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c57f4521.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      key={todo.id}\n      data-id={todo.id}\n      className={\n        classNames('TodoInfo', { 'TodoInfo--completed': todo.completed })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {\n      todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))\n    }\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\n\nconst getUserById = (userId: number) => {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n};\n\nconst todosWithUsers = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nconst getTodoId = (todos: Todo[]) => {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const onAdd = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.preventDefault();\n\n    const newTodo: Todo = {\n      id: getTodoId(todos),\n      title: todoTitle,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    if (!todoTitle) {\n      setHasTitleError(true);\n    }\n\n    if (!userId) {\n      setHasUserIdError(true);\n    }\n\n    if (!todoTitle || !userId) {\n      return;\n    }\n\n    if (todoTitle && userId) {\n      setHasTitleError(false);\n      setHasUserIdError(false);\n      setTodos(currentTodos => [...currentTodos, newTodo]);\n      setTodoTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\">\n        <div className=\"field\">\n          <input\n            placeholder=\"Enter title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={todoTitle}\n            onChange={(event) => {\n              setTodoTitle(event.target.value);\n              setHasTitleError(false);\n            }}\n          />\n          {hasTitleError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={event => {\n              setUserId(+event.target.value);\n              setHasUserIdError(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {\n              usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))\n            }\n          </select>\n          {hasUserIdError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={onAdd}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}